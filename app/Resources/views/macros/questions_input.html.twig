{% macro questions_input(parent_form) %}
  {% set question_name = parent_form.questions.vars.full_name ~ "[__question_id__]" %}
  {% set answer_name = question_name ~ "[answers][__answer_id__]" %}

  <h1>Fragen:</h1>
  <div ng-app="instructionQuestions" ng-controller="questionsController">
    <ul class="questions">
    {% verbatim %}
      <div ng-repeat="question in questions track by question.index">
        <div class="form-group">

            <label class="sr-only" for="{{question.imagePathFullPath}}">Bild</label>
            <input type="text" class="question-input form-control mb-2 mr-sm-2 mb-sm-0"
              placeholder="Bild"
              id="{{ question.imagePathFullPath }}"
              name="{{ question.imagePathFullPath }}">

            <label calss="sr-only" for="{{ question.questionTextFullPath }}">Frage</label>
            <input type="text" class="question-input form-control mb-2 mr-sm-2 mb-sm-0"
              placeholder="Wie lautet..."
              id="{{ question.questionTextFullPath }}"
              name="{{ question.questionTextFullPath }}">
          </div>

          <div ng-repeat="answer in question.answers track by answer.index">
            {{ answer.index }}
          </div>
          <a class="add-answer btn btn-success" ng-click="addAnswerTo(question)" id="add_answer_for___question_id__">+</a>
      </div>

    </ul>
    <a ng-click="addQuestion()" class="btn btn-primary mb-2" id="add-question">Frage hinzuf√ºgen</a>
    {% endverbatim %}
  </div>

  <script>

  angular.module('instructionQuestions', []).controller('questionsController', function($scope) {
    var QUESTION_FULL_PATH = "{{ question_name }}";
    var ANSWER_FULL_PATH = "{{ answer_name }}";
    var QUESTION_ID = "__question_id__";
    var ANSWER_ID = "__answer_id__";

    $scope.questions = [];

    $scope.addQuestion = function() {
      var index = $scope.questions.length;
      var newQuestion = {
        index:                index,
        questionTextFullPath: questionAttributePathWithIndex(index, 'questionText'),
        imagePathFullPath:    questionAttributePathWithIndex(index, 'imagePath'),
        answersFullPath:      questionAttributePathWithIndex(index, 'answers'),
        answers:              [],
      };

      $scope.questions.push(newQuestion);
    };

    $scope.addAnswerTo = function(question) {
      var questionIndex = question.index;
      var answerIndex = question.answers.length;

      var newAnswer = {
        index:              answerIndex,
        answerTextFullPath: answerAttributePathWithIndices(questionIndex, answerIndex, 'answerText'),
        isCorrectFullPath:  answerAttributePathWithIndices(questionIndex, answerIndex, 'isCorrect'),
      };

      question.answers.push(newAnswer);

      console.log(question)
    };

    var questionAttributePathWithIndex = function(questionIndex, attributeName) {
      var regexToReplace = new RegExp(QUESTION_ID, 'g');
      var fullPath = QUESTION_FULL_PATH.replace(regexToReplace, questionIndex);
      return (fullPath + '[' + attributeName + ']');
    };


    var answerAttributePathWithIndices = function(questionIndex, answerIndex, attributeName) {
      var questionIdRegEx = new RegExp(QUESTION_ID, 'g');
      var answerIdRegEx = new RegExp(ANSWER_ID, 'g');
      var fullPath = ANSWER_FULL_PATH.replace(questionIdRegEx, questionIndex)
                                     .replace(answerIdRegEx, answerIndex);
      return (fullPath + '[' + attributeName + ']');
    };
  });
// ----------- OLD CODE >>>>>
  // jQuery(document).ready(function() {
  //   var $questionList = $('ul.questions');

  //   $questionList.data('index', $questionList.find('input.question-input').length);

  //   $('#add-question').on('click', function(e) {
  //     e.preventDefault();
  //     addQuestion($questionList);
  //   });
  // });

  // function addQuestion($questionList) {
  //   var questionIndex = $questionList.data('index');

  //   $questionList.append(questionTemplate(questionIndex));
  //   addAnswer(questionIndex);
  //   addAnswer(questionIndex);

  //   $('#add_answer_for_' + questionIndex).on('click', function(e) {
  //     e.preventDefault();
  //     addAnswer(questionIndex);
  //   });

  //   $questionList.data('index', questionIndex + 1);
  // };

  // function addAnswer(questionIndex) {
  //   var $answersContainer = $('div#answers_for_' + questionIndex)
  //   var answerIndex = $answersContainer.find('input.answer-input').length;

  //   $answersContainer.append(answerTemplate(questionIndex, answerIndex));

  //   $('#remove_answer_' + answerIndex + '_from_' + questionIndex).on('click', function(e) {
  //     e.preventDefault();
  //     $('#answer_' + answerIndex + '_for_' + questionIndex).remove();
  //   });
  // }

  // function questionTemplate(index) {
  //   return `
  //     <div id="question___question_id__" class="question">
  //       <div class="form-group">

  //         <label class="sr-only" for="{{ question_name }}[imagePath]">Bild</label>
  //         <input type="text" class="question-input form-control mb-2 mr-sm-2 mb-sm-0"
  //           placeholder="Bild"
  //           id="{{ question_name }}[imagePath]"
  //           name="{{ question_name }}[imagePath]">

  //         <label calss="sr-only" for="{{ question_name }}[questionText]">Frage</label>
  //         <input type="text" class="question-input form-control mb-2 mr-sm-2 mb-sm-0"
  //           placeholder="Wie lautet..."
  //           id="{{ question_name }}[questionText]"
  //           name="{{ question_name }}[questionText]">

  //       </div>

  //       <div id="answers_for___question_id__" class="answers">
  //       </div>
  //       <a class="add-answer btn btn-success" href="#" id="add_answer_for___question_id__">+</a>
  //     </div>
  //   `.replace(/__question_id__/g, index);
  // }

  // function answerTemplate(questionIndex, answerIndex) {
  //   return `
  //     <div id="answer___answer_id___for___question_id__"  style="display: flex; flex-direction: row;">
  //       <div style="width: 75%;">

  //         <label class="sr-only" for="{{ answer_name }}[answerText]">Antwort</label>
  //         <input type="text" class="answer-input form-control mb-1 mr-sm-2 mb-sm-0"
  //           id="{{ answer_name }}[answerText]"
  //           placeholder="Antwort __answer_id__"
  //           name="{{ answer_name }}[answerText]">
  //       </div>

  //       <div class="form-check mb-2 mr-sm-2 mb-sm-0" style="width: 20%;">
  //         <label class="form-check-label">
  //           <input class="form-check-input" type="checkbox"name="{{ answer_name }}[isCorrect]"> Korrekt
  //         </label>
  //       </div>
  //       <div>
  //         <a id="remove_answer___answer_id___from___question_id__" href="#" class="btn btn-danger">
  //           <span class="fa fa-times action-icon"></span>
  //         </a>
  //       </div>
  //     </div>
  //   `.replace(/__question_id__/g, questionIndex)
  //    .replace(/__answer_id__/g, answerIndex);
  // }
  </script>
{% endmacro %}
